{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"Google Scholar Excel export","options":{"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"user_agent":"","override":{"excludes":false,"includes":false,"matches":false,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://scholar.google.com/*","*://scholar.google.se/*"],"orig_noframes":null,"orig_run_at":"document-end","use_excludes":[],"use_includes":[],"use_matches":[]}},"storage":{"data":{},"ts":1411448977580},"enabled":true,"position":1,"uuid":"fae18c98-2a44-4df7-974f-74e8ed192c0d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgR29vZ2xlIFNjaG9sYXIgRXhjZWwgZXhwb3J0Ci8vIEBuYW1lc3BhY2UgIGh0dHA6Ly9lcmlrc2tsb3RpbnMubHYvCi8vIEB2ZXJzaW9uICAgIDAuMgovLyBAZGVzY3JpcHRpb24gIGVudGVyIHNvbWV0aGluZyB1c2VmdWwKLy8gQG1hdGNoICAgICAgKjovL3NjaG9sYXIuZ29vZ2xlLmNvbS8qCi8vIEBtYXRjaCAgICAgICo6Ly9zY2hvbGFyLmdvb2dsZS5zZS8qCi8vIEBncmFudCAgICAgICBub25lCi8vIEBjb3B5cmlnaHQgIDIwMTQrLCBFLktsb3RpbnMKLy8gQHJlcXVpcmUgaHR0cDovL2NvZGUuanF1ZXJ5LmNvbS9qcXVlcnktbGF0ZXN0LmpzCi8vID09L1VzZXJTY3JpcHQ9PQoKOyhmdW5jdGlvbigkLCB3aW5kb3cpCnsKICB2YXIgcmVzdWx0cyA9IFtdOwoJdmFyIGluc3RhbGxCdXR0b24gPSBmdW5jdGlvbih0aXRsZSwgYWN0aW9uKQogIHsKICAgICB2YXIgbm9kZSA9ICQoJzxhIGhyZWY9IiMiPicrdGl0bGUrJzwvYT4nKTsgCiAgICAgcmV0dXJuICQobm9kZSkKICAgICAJLm9uKCdjbGljaycsIGFjdGlvbikKICAgICAgLmFwcGVuZFRvKCcjZ3NfZ2JfbHQnKTsKICB9OwogICAgCiAgdmFyIGdldFF1ZXJ5SW5mbyA9IGZ1bmN0aW9uKCkKICB7CiAgICAgdmFyIG9mZnNldCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLm1hdGNoKC9zdGFydD0oWzAtOV0rKS8pOwogCiAgICAgb2Zmc2V0ID0gKG9mZnNldCkgPyBwYXJzZUludChvZmZzZXRbMV0pOiAwOyAKICAgICAKICAgICB2YXIgbnVtID0gd2luZG93LmxvY2F0aW9uLmhyZWYubWF0Y2goL251bT0oWzAtOV0rKS8pOwogICAgIG51bSA9IChudW0pID8gcGFyc2VJbnQobnVtWzFdKTogMDsgIAogICAgICAKICAgICB2YXIgcSA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLm1hdGNoKC9xPShbXiZdKykvKTsKICAgICAgcSA9IChxKSA/IHFbMV0gOiBudWxsOyAKICAgICAgcmV0dXJuIHtvZmZzZXQ6b2Zmc2V0LCBudW06bnVtLCBxOnF9OwogIH07CgogIHZhciBwYXJzZVJlc3VsdCA9IGZ1bmN0aW9uKGksIGl0ZW0pCiAgewogICAgLy8gIGNvbnNvbGUubG9nKCdwYXJzZVJlc3VsdCcsaSwgaXRlbSk7CiAgICB2YXIgb2Zmc2V0ID0gIGdldFF1ZXJ5SW5mbygpLm9mZnNldDsKICAgIHZhciBpbmRleCA9IG9mZnNldCsgaSArIDE7IAogICAgdmFyIHRpdGxlID0gJCgnLmdzX3J0JyxpdGVtKS50ZXh0KCkucmVwbGFjZSgvKFxyXG58XG58XHIpL2dtLCIiKTsKICAgIHZhciBsaW5rICA9ICQoJy5nc19ydCBhJyxpdGVtKS5hdHRyKCdocmVmJyk7CiAgICB2YXIgbWV0YSA9ICQoJy5nc19hJywgaXRlbSkudGV4dCgpLnJlcGxhY2UoLyhcclxufFxufFxyKS9nbSwiIik7CiAgICB2YXIgYWJzdHJhY3QgPSAkKCcuZ3NfcnMnLCBpdGVtKS50ZXh0KCkucmVwbGFjZSgvKFxyXG58XG58XHIpL2dtLCIiKTsKICAgIHJlc3VsdHMucHVzaCh7IGluZGV4OmluZGV4LHRpdGxlOiB0aXRsZSxsaW5rOmxpbmssIG1ldGE6IG1ldGEsIGFic3RyYWN0OmFic3RyYWN0fSk7CiAgICAgLy9jb25zb2xlLmxvZyhbdGl0bGUsYXV0aG9ycyxhYnN0cmFjdF0pOwogIH07CiAgICAKICAgIHZhciBlbmNvZGVDU1YgPSBmdW5jdGlvbiAocmVzdWx0cykKICAgIHsKICAgICAgICB2YXIgcmVzdWx0ID0gJyc7CiAgICAJZm9yKHZhciBpPTA7aTxyZXN1bHRzLmxlbmd0aDtpKyspCiAgICAgIHsKICAgICAgICB2YXIgcm93ID0gW107CiAgCQkJZm9yKHZhciBjb2wgaW4gcmVzdWx0c1tpXSkKICAgICAgICB7CiAgICAgICAgICAgIHJvdy5wdXNoKHJlc3VsdHNbaV1bY29sXSk7CiAgICAgICAgfQogICAgICAgIHJlc3VsdCArPSByb3cuam9pbigiXHQiKSsiXG4iOwogICAgICB9CiAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9OwogICAgCiAgICB2YXIgcGFyc2VQYWdlID0gZnVuY3Rpb24oKQogICAgewogICAgICAgcmVzdWx0cyA9IFtdOwogICAgICAgJCgnLmdzX3InKS5lYWNoKHBhcnNlUmVzdWx0KTsKICAgICAgIC8vIGNvbnNvbGUubG9nKHJlc3VsdHMpOwogICAgICAgdmFyIHN0ciA9IGVuY29kZUNTVihyZXN1bHRzKTsKICAgICAgIGRpc3BsYXlSZXN1bHRzKHN0cik7CiAgICAgICAgLy8gY29uc29sZS5sb2cocmVzdWx0cy5sZW5ndGgsIHJlc3VsdHMpOwogICAgICAgIAogICAgfTsKICAgIAogICAgCiAgICB2YXIgZGlzcGxheVJlc3VsdHMgPSBmdW5jdGlvbihyZXN1bHRzKQogICAgewogICAgICAgIHZhciBub2RlID0gJCgnPGRpdiBjbGFzcz0icHNfcmVzdWx0cyIgc3R5bGU9InBvc2l0aW9uOmZpeGVkO3RvcDowO2xlZnQ6MDsgd2lkdGg6MTAwJTsgaGVpZ2h0OjEwMCU7IGJhY2tncm91bmQ6cmdiYSg1MCw1MCw1MCwgMC4zKTt6LWluZGV4Ojk5OTk7Ij48ZGl2IHN0eWxlPSJiYWNrZ3JvdW5kOndoaXRlO3BhZGRpbmc6MjBweDt0ZXh0LWFsaWduOmNlbnRlcjtwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6NTAlO2xlZnQ6NTAlO3RyYW5zZm9ybTp0cmFuc2xhdGUoLTUwJSwtNTAlKTsiPjxoMz5Db3B5IGFuZCBwYXN0ZSB0aGlzIHRleHQgdG8gZXhjZWw8L2gzPjx0ZXh0YXJlYSByb3dzPSIxMCIgY29scz0iODAiIHN0eWxlPSIiPicrcmVzdWx0cysnPC90ZXh0YXJlYT48L2JyPjxidXR0b24gZGF0YS1hY3Rpb249ImNsb3NlIj5DbG9zZTwvYnV0dG9uPiZuYnNwOzxidXR0b24gZGF0YS1hY3Rpb249Im5leHQiPk5leHQgcGFnZTwvYnV0dG9uPjwvZGl2PjwvZGl2PicpOwogICAgICAgCiAgICAgICAgJChub2RlKS5hcHBlbmRUbygnYm9keScpOwogICAgICAgICQoJ3RleHRhcmVhJyxub2RlKS5zZWxlY3QoKTsKICAgICAgICAkKCdidXR0b25bZGF0YS1hY3Rpb249Im5leHQiXScsbm9kZSkub24oJ2NsaWNrJywgZnVuY3Rpb24oKXsgCiAgICAgICAgCXZhciB1cmwgPSAkKCdiLmdzX25tYSArIGEnKS5hdHRyKCdocmVmJyk7CiAgICAgICAgICBpZiAoIXVybCkKICAgICAgICAgIHsKICAgICAgICAgICAgYWxlcnQoJ1lvdSBoYXZlIHJlYWNoZWQgdGhlIGVuZCEnKTsKICAgICAgICAgIH0KICAgICAgICAgIGVsc2UKICAgICAgICAgIHsKICAgICAgICAgICAgZG9jdW1lbnQubG9jYXRpb24gPSB1cmw7CiAgICAgICAgICB9CiAgICAgICAgICAgIC8vY29uc29sZS5sb2codXJsKTsKICAgICAgICAgICAKICAgICAgICB9KTsKICAgICAgICAKICAgICAgICAgJCgnYnV0dG9uW2RhdGEtYWN0aW9uPSJjbG9zZSJdJyxub2RlKS5vbignY2xpY2snLCBmdW5jdGlvbigpeyAKICAgICAgICAJcmVzdWx0cyA9IFtdOwogICAgICAgICAgICAgCiAgICAgICAgICAgICAkKCcucHNfcmVzdWx0cycpLnJlbW92ZSgpOwogICAgICAgIH0pOwogICAgfTsKICAKICAgIAogICAgdmFyIGJ1dHRvbjEgPSBpbnN0YWxsQnV0dG9uKCdFeHBvcnQnLCBwYXJzZVBhZ2UpOwoKfSkoJCwgd2luZG93KTs="}]}